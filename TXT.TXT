     // O pr'oximo player que entrar vai criar uma room nova
                // comeca o jogo
                // para avisar os players que o jogo vai comecar, nao pode mais usar o lastRoom, porque ele e null
                // usa info.room...
                // Agora.... eu sou meio xiita... se quiser, para facilitar ainda mais, armazena logo o socket no info, nao s'o o id...
                // tipo assim
     
     
     
      // deu para entender a logica????? Sim, voce ta fazendo sem testar, so de cabeca ??
    // sim.... estou digitando aqui... Provavelmente vai dar certinho... :) Carai rafa um dia vou ser assim kkk
    // uhauhauahua nada!!! 'e que eu j'a fiz isso algumas vezes antes.... por isso ja ate sei o que nao vai bem e o que +- vai.... :)
    // kkk bele, brigadao rafa, vai la pra reuniao agradeco 
    // IMagina!!! TMJ!
      
      
      
      
      / Mas ele nao retorna um json gigante ??
            // O socket 'e o objeto. esse voc^e nao vai enviar para o cliente
            // pode enviar um objeto novo, que voce cria na hora de enviar as mensagens
            // porque a'i, tendo um player, voc^e vai ter a room do player, e com a room, voc^e j'a vai ter
            // o outro player_info... E como nesse player_info voc^e j'a tem o socket direto, o envio das mensagens fica bem mais de boa...
            // da uma olhada


       // ajuda o garbage collector!  entendi rafa, depois quando tiver um tempo pode me explicar esse garbage collector ?
            // belea! 'e o cara que joga fora todos os objetos que nao estao mais sendo utilizados... tem no Java, JS, C#, phyton.......... :) mas as infos dos objs ficam em cache ??
            // todas as variaveis aqui ficam na RAM do servidor!!!
            // se voc^e fosse fazer um esquema desse real, para milhoes de players, cada server ia suportar um numero maximo de salas
            // ai, no momento da conexao, voce precisaria dizer para o client qual o IP que ele teria que se conectar, para gerar um balanceamento de carga
            // tudo que esta aqui est'a na RAM do server...
            // O garbage collector joga fora e libera memoria de coisas qu enao estao mais sendo utilizadas ;)
            // quando a gente se falar de novo, com mais carinho, eu te explico, sim! :)
            // Bele entendi um pouco sim depois vou dar uma lida melhor, agradeco a atencao // imagina!!! valeu!!
            // tmj! qualquer CountQueuingStrategy, me d'a um toque! falouuuuuuuuu! []'s 